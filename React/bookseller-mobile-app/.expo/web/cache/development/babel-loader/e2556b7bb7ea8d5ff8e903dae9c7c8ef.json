{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect } from \"react\";\nimport Seperator from \"../component/Seperator\";\nimport axios from \"axios\";\nimport { BookSellerContext, BooksellerProvider, useContext } from \"../context\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Carts() {\n  var _useContext = useContext(BookSellerContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      state = _useContext2[0],\n      dispatch = _useContext2[1];\n\n  var navigation = useNavigation();\n\n  function fetchCart() {\n    axios.get(\"https://api-bookseller-herokuapp.com/carts\").then(function (response) {\n      dispatch({\n        type: \"FETCH_CARTS\",\n        payload: response.data\n      });\n    });\n  }\n\n  function removeCart(id) {\n    axios.delete(\"https://api-bookseller-herokuapp.com/carts/\" + id).then(function (res) {\n      fetchCart();\n    });\n  }\n\n  function goToBook() {\n    navigation.navigate(\"Book\");\n  }\n\n  useEffect(function () {\n    fetchCart();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      ItemSeparatorComponent: Seperator,\n      ListEmptyComponent: _jsxs(View, {\n        style: styles.emptyContainer,\n        children: [_jsx(Text, {\n          style: styles.emptyText,\n          children: \"Cart is empty!\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return goToBook();\n          },\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Go to Books\"\n          })\n        })]\n      }),\n      keyExtractor: function keyExtractor(item, index) {\n        return item.id + index;\n      },\n      data: true\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  itemContainer: {\n    flexDirection: \"row\",\n    padding: 10\n  },\n  image: {\n    width: 100,\n    height: 150\n  },\n  name: {\n    fontSize: 22,\n    fontWeight: \"400\",\n    marginBottom: 10\n  },\n  author: {\n    fontSize: 18,\n    fontWeight: \"200\"\n  },\n  buttonContainer: {\n    position: \"absolute\",\n    top: 110,\n    left: 10\n  },\n  button: {\n    backgroundColor: \"red\",\n    borderRadius: 10,\n    padding: 7\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"#fff\"\n  },\n  emptyContainer: {\n    marginTop: 250,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  emptyText: {\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["C:/301Sabah/17-REACT/bookseller-mobile-app/src/pages/Carts.js"],"names":["React","useEffect","Seperator","axios","BookSellerContext","BooksellerProvider","useContext","useNavigation","Carts","state","dispatch","navigation","fetchCart","get","then","response","type","payload","data","removeCart","id","delete","res","goToBook","navigate","styles","container","emptyContainer","emptyText","button","buttonText","item","index","StyleSheet","create","flex","backgroundColor","itemContainer","flexDirection","padding","image","width","height","name","fontSize","fontWeight","marginBottom","author","buttonContainer","position","top","left","borderRadius","color","marginTop","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    FlatList, // ScrollView dan daha hızlı response veriyor , listeleniyor\r\n    Image,\r\n    TouchableOpacity\r\n} from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\nimport Seperator from \"../component/Seperator\";\r\nimport axios from \"axios\";\r\nimport { BookSellerContext, BooksellerProvider, useContext } from \"../context\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n\r\n\r\n\r\nexport default function Carts() {\r\n\r\n    const [state, dispatch] = useContext(BookSellerContext);\r\n    const navigation = useNavigation();\r\n\r\n\r\n    function fetchCart() {\r\n        axios\r\n            .get(\"https://api-bookseller-herokuapp.com/carts\")\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: \"FETCH_CARTS\",\r\n                    payload: response.data\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    function removeCart(id) {\r\n        axios\r\n            .delete(`https://api-bookseller-herokuapp.com/carts/${id}`)\r\n            .then((res) => {\r\n                fetchCart();\r\n            });\r\n    }\r\n\r\n    function goToBook() {\r\n        navigation.navigate(\"Book\") // name = \"Book\" App.js te sayfa adı \r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCart()\r\n    }, []);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n                ItemSeparatorComponent={Seperator}\r\n                ListEmptyComponent={ //boş geldiğinde yazıcak olan şeyler\r\n                    <View style={styles.emptyContainer}>\r\n                        <Text style={styles.emptyText}>Cart is empty!</Text>\r\n                        <TouchableOpacity onPress={() => goToBook()} style={styles.button}>\r\n                            <Text style={styles.buttonText}>Go to Books</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                }\r\n                keyExtractor = {(item, index) => item.id + index}\r\n                data\r\n            />\r\n\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: { flex: 1, backgroundColor: \"#fff\" },\r\n    itemContainer: { flexDirection: \"row\", padding: 10 },\r\n    image: { width: 100, height: 150 },\r\n    name: { fontSize: 22, fontWeight: \"400\", marginBottom: 10 },\r\n    author: { fontSize: 18, fontWeight: \"200\" },\r\n    buttonContainer: {\r\n        position: \"absolute\",\r\n        top: 110,\r\n        left: 10\r\n    },\r\n    button: {\r\n        backgroundColor: \"red\",\r\n        borderRadius: 10,\r\n        padding: 7\r\n\r\n    },\r\n    buttonText: { fontSize: 20, color: \"#fff\" },\r\n    emptyContainer: {\r\n        marginTop: 250,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    },\r\n    emptyText: { fontSize: 30 }\r\n\r\n\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}