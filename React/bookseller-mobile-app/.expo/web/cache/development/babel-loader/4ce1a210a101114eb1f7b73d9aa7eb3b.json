{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext, useReducer, createContext } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar BooksellerContext = createContext();\nvar initialState = {\n  books: [],\n  carts: []\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"FETCH_BOOKS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        books: action.payload\n      });\n\n    case \"FETCH_CARTS\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        carts: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar BooksellerProvider = function BooksellerProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return _jsx(BooksellerContext.Provider, {\n    value: [state, dispatch],\n    children: props.children\n  });\n};\n\nexport { BooksellerContext, BooksellerProvider, useContext };","map":{"version":3,"sources":["C:/301Sabah/17-REACT/bookseller-mobile-app/src/context/index.js"],"names":["React","useContext","useReducer","createContext","BooksellerContext","initialState","books","carts","reducer","state","action","type","payload","BooksellerProvider","props","dispatch","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,aAAxC,QAA6D,OAA7D;;AAEA,IAAMC,iBAAiB,GAAGD,aAAa,EAAvC;AAGA,IAAME,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,KAAK,EAAC;AAFW,CAArB;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAE/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACK,6CAAYF,KAAZ;AAAmBH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAAjC;;AACL,SAAK,aAAL;AACI,6CAAWH,KAAX;AAAkBF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAAhC;;AACA;AACI,aAAOH,KAAP;AANZ;AAUH,CAZD;;AAeA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpC,oBAAyBZ,UAAU,CAACM,OAAD,EAASH,YAAT,CAAnC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAaM,QAAb;;AAEE,SACI,KAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAG,CAACN,KAAD,EAAQM,QAAR,CAApC;AAAA,cACKD,KAAK,CAACE;AADX,IADJ;AAKH,CARD;;AAWA,SAAQZ,iBAAR,EAA0BS,kBAA1B,EAA6CZ,UAA7C","sourcesContent":["import React , {useContext, useReducer, createContext} from  \"react\";\r\n\r\nconst BooksellerContext = createContext();\r\n\r\n//kitaplar var boş iki arrayimiz var ,book yok çünkü  book:{} çünkü düzenleme yapmıcaz\r\nconst initialState = {\r\n    books:[],\r\n    carts:[],\r\n\r\n};\r\n\r\n\r\nconst reducer = (state, action) => {\r\n\r\n    switch(action.type){\r\n        case \"FETCH_BOOKS\": \r\n             return  {...state, books: action.payload};\r\n        case \"FETCH_CARTS\":\r\n            return {...state, carts: action.payload};  // state e initialState değerini vericez \r\n            default:\r\n                return state;     \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst BooksellerProvider = (props) => {\r\n  const [state,dispatch] = useReducer(reducer,initialState)\r\n    \r\n    return(\r\n        <BooksellerContext.Provider value= {[state, dispatch]}>\r\n            {props.children}\r\n        </BooksellerContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport {BooksellerContext,BooksellerProvider,useContext}"]},"metadata":{},"sourceType":"module"}