{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport BooksScreen from \"./src/pages/Books\";\nimport * as React from \"react\";\nimport CartsScreen from \"./src/pages/Carts\";\nimport CartIcon from \"./src/component/CartIcon\";\nimport \"react-native-gesture-handler\";\nimport { BooksellerProvider, useContext } from \"./src/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(BooksellerProvider, {\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsxs(Stack.Screen, {\n          children: [\"name = \\\"Book\\\" component = \", BooksScreen, \"options =\", {\n            title: \"Book\",\n            headerRight: function headerRight(props) {\n              return _jsx(CartIcon, _objectSpread({}, props));\n            }\n          }]\n        }), _jsxs(Stack.Screen, {\n          children: [\"name=\\\"Cart\\\" component = \", CartsScreen, \"options = \", {\n            title: \"Cart\"\n          }]\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/301Sabah/17-REACT/bookseller-mobile-app/App.js"],"names":["NavigationContainer","createStackNavigator","BooksScreen","React","CartsScreen","CartIcon","BooksellerProvider","useContext","Stack","App","title","headerRight","props"],"mappings":";;;;;;AAAA,SAAQA,mBAAR,QAAmC,0BAAnC;AACA,SAAQC,oBAAR,QAAmC,yBAAnC;AACA,OAAOC,WAAP;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP;AACA,OAAO,8BAAP;AACA,SAASC,kBAAT,EAA4BC,UAA5B;;;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;AAEA,eAAe,SAASQ,GAAT,GAAe;AAE5B,SACI,KAAC,kBAAD;AAAA,cACI,KAAC,mBAAD;AAAA,gBACI,MAAC,KAAD,CAAO,SAAP;AAAA,mBACI,MAAC,KAAD,CAAO,MAAP;AAAA,qDAEeP,WAFf,eAII;AACEQ,YAAAA,KAAK,EAAC,MADR;AAEEC,YAAAA,WAAW,EAAC,qBAACC,KAAD;AAAA,qBAAW,KAAC,QAAD,oBAAcA,KAAd,EAAX;AAAA;AAFd,WAJJ;AAAA,UADJ,EAYI,MAAC,KAAD,CAAO,MAAP;AAAA,mDAEcR,WAFd,gBAGY;AACTM,YAAAA,KAAK,EAAC;AADG,WAHZ;AAAA,UAZJ;AAAA;AADJ;AADJ,IADJ;AA0BD","sourcesContent":["import {NavigationContainer}  from \"@react-navigation/native\";                              //expo doctor --fix-dependencies\nimport {createStackNavigator} from \"@react-navigation/stack\";\nimport BooksScreen from \"./src/pages/Books\"; //farklı bir isim verilmiş Books yerine \nimport * as React from \"react\";\nimport CartsScreen from \"./src/pages/Carts\";\nimport CartIcon from \"./src/component/CartIcon\"; \nimport \"react-native-gesture-handler\";\nimport { BooksellerProvider,useContext } from \"./src/context\";\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n// native deki navigasyon yapısını tanımladık\n  return (\n      <BooksellerProvider>\n          <NavigationContainer>\n              <Stack.Navigator>\n                  <Stack.Screen>\n                    name = \"Book\" \n                    component = {BooksScreen}\n                    options ={\n                      {\n                        title:\"Book\",\n                        headerRight:(props) => <CartIcon {...props}/> // CartIcon daki props ı udeğiştirme\n                      }\n\n                    }\n                  </Stack.Screen>\n                  <Stack.Screen>\n                   name=\"Cart\"\n                   component = {CartsScreen}\n                   options = {{\n                     title:\"Cart\"\n                   }}\n                  </Stack.Screen>\n              </Stack.Navigator>\n          </NavigationContainer>\n      </BooksellerProvider>\n  )\n}"]},"metadata":{},"sourceType":"module"}