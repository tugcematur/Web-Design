{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useEffect } from \"react\";\nimport Seperator from \"../component/Seperator\";\nimport axios from \"axios\";\nimport { BookSellerContext, useContext } from \"../context\";\nimport { backgroundColor } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Books(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(BookSellerContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      state = _useContext2[0],\n      dispatch = _useContext2[1];\n\n  function _renderItem(item, index) {\n    return _jsxs(View, {\n      style: {\n        flexDirection: \"row\",\n        padding: 10\n      },\n      children: [_jsx(Image, {\n        source: {\n          uri: item.imgUrl\n        },\n        style: styles.image\n      }), _jsxs(View, {\n        style: {\n          padding: 10\n        },\n        children: [_jsx(Text, {\n          style: styles.name,\n          children: \"item.name\"\n        }), _jsx(Text, {\n          style: styles.author,\n          children: \"item.author\"\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return addToCart(item);\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Add +\"\n            })\n          })\n        })]\n      })]\n    });\n  }\n\n  addToCart = function addToCart(cartItem) {\n    delete cartItem.id;\n    axios.post(\"https://api-bookseller-herokuapp.com/carts\", cartItem).then(function (response) {});\n  };\n\n  useEffect(function () {\n    axios.get(\"https://api-bookseller-herokuapp.com/books\").then(function (response) {\n      dispatch({\n        type: \"FETCH_BOOKS\",\n        payload: response.data\n      });\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: state.books,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        return _renderItem(item, index);\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      ItemSeparatorComponent: Seperator\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  image: {\n    width: 100,\n    height: 150\n  },\n  name: {\n    fontSize: 22,\n    fontWeight: \"400\",\n    marginBottom: 10\n  },\n  author: {\n    fontSize: 18,\n    fontWeight: \"200\"\n  },\n  buttonContainer: {\n    position: \"absolute\",\n    top: 110,\n    left: 10\n  },\n  button: {\n    backgroundColor: \"#24a0ed\",\n    borderRadius: 10,\n    padding: 7\n  },\n  buttonText: {\n    fontSize: 20,\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["C:/301Sabah/17-REACT/bookseller-mobile-app/src/pages/Books.js"],"names":["React","useEffect","Seperator","axios","BookSellerContext","useContext","backgroundColor","Books","navigation","state","dispatch","_renderItem","item","index","flexDirection","padding","uri","imgUrl","styles","image","name","author","buttonContainer","addToCart","button","buttonText","cartItem","id","post","then","response","get","type","payload","data","container","books","StyleSheet","create","flex","width","height","fontSize","fontWeight","marginBottom","position","top","left","borderRadius","color"],"mappings":"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","sourcesContent":["import {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    FlatList, // ScrollView dan daha hızlı response veriyor , listeleniyor\r\n    Image,\r\n    TouchableOpacity\r\n} from \"react-native\";\r\nimport React, { useEffect } from \"react\";\r\nimport Seperator from \"../component/Seperator\";\r\nimport axios from \"axios\";\r\nimport { BookSellerContext, useContext } from \"../context\";\r\nimport { backgroundColor } from \"react-native/Libraries/Components/View/ReactNativeStyleAttributes\";\r\n\r\n\r\nexport default function Books({ navigation }) {\r\n\r\n\r\n    const [state, dispatch] = useContext(BookSellerContext);\r\n\r\n\r\n    function _renderItem(item, index) {\r\n\r\n        return (\r\n            <View style={{ flexDirection: \"row\", padding: 10 }}>\r\n                <Image\r\n                    source={{ uri: item.imgUrl }}\r\n                    style={styles.image}\r\n                />\r\n                <View style={{ padding: 10 }}>\r\n                    <Text style={styles.name}>item.name</Text>\r\n                    <Text style={styles.author}>item.author</Text>\r\n                    <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity\r\n                            onPress={(() => addToCart(item))}\r\n                            style={styles.button}>\r\n                            <Text style={styles.buttonText}>Add +</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n\r\n                </View>\r\n            </View>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    addToCart = (cartItem) => {\r\n        delete cartItem.id; // sepete attığımız şey görünmesin diye\r\naxios\r\n.post(\"https://api-bookseller-herokuapp.com/carts\",cartItem)\r\n.then((response) => {}) //dönen response lile bir şey yapmıcam anlamına geliyor\r\n    }\r\n\r\n\r\n    useEffect(() =>{\r\n      axios\r\n      .get(\"https://api-bookseller-herokuapp.com/books\")\r\n      .then((response) => {\r\n          dispatch({type: \"FETCH_BOOKS\", \r\n                    payload:response.data\r\n                });\r\n      })\r\n\r\n    },[]) //her render da çalışması için parametre vermicez(yazdığımız şeyleri göremeyiz,sürekli render ettiği için ) ama bir kez çalışsın istiyorsak [] parametresi vericez \r\n\r\n\r\n    return(\r\n\r\n        <View style = {styles.container}>\r\n            <FlatList\r\n            data={state.books}\r\n            renderItem = {({item,index}) => _renderItem(item,index)}\r\n            keyExtractor = {(item) => item.id}\r\n            ItemSeparatorComponent = {Seperator}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: { flex: 1, backgroundColor: \"#fff\" },\r\n    image: { width: 100, height: 150 },\r\n    name: { fontSize: 22, fontWeight: \"400\", marginBottom: 10 },\r\n    author: { fontSize: 18, fontWeight: \"200\" },\r\n    buttonContainer: {\r\n        position: \"absolute\",\r\n        top: 110,\r\n        left: 10\r\n    },\r\n    button: {\r\n        backgroundColor: \"#24a0ed\",\r\n        borderRadius: 10,\r\n        padding: 7\r\n\r\n    },\r\n    buttonText: { fontSize: 20, color: \"#fff\" }\r\n\r\n\r\n})\r\n"]},"metadata":{},"sourceType":"module"}